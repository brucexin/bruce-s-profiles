;; -*- mode: emacs-lisp -*-
;; History entries used for anything adaptive display.
(setq anything-c-adaptive-history (quote (("Google Suggest" ("camp rock                     " ("cam" . 2))) ("Yasnippet" ("class ${1:ClassName}(${2:object}):
    \"\"\"$3
    \"\"\"

    def __init__(self, $4):
        \"\"\"$5
        ${4:$
        (let* ((indent
                (concat \"\\n\" (make-string (current-column) 32)))
               (args
                (mapconcat
                 '(lambda (x)
                    (if (not (string= (nth 0 x) \"\"))
                        (concat \"- \" (char-to-string 96) (nth 0 x)
                                (char-to-string 96) \":\")))
                 (mapcar
                  '(lambda (x)
                     (mapcar
                      (lambda (x)
                        (replace-regexp-in-string \"[[:blank:]]*$\" \"\"
                         (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x))) x))
                  (mapcar '(lambda (x) (split-string x \"=\"))
                          (split-string text \",\")))
                 indent)))
          (if (string= args \"\")
              (make-string 3 34)
            (mapconcat
             'identity
             (list \"\" \"Arguments:\" args (make-string 3 34))
             indent)))
        }
        ${4:$
        (mapconcat
         '(lambda (x)
            (if (not (string= (nth 0 x) \"\"))
                (concat \"self._\" (nth 0 x) \" = \" (nth 0 x))))
         (mapcar
          '(lambda (x)
             (mapcar
              '(lambda (x)
                 (replace-regexp-in-string \"[[:blank:]]*$\" \"\"
                  (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x)))
              x))
          (mapcar '(lambda (x) (split-string x \"=\"))
                  (split-string text \",\")))
         (concat \"\\n\" (make-string (current-column) 32)))
        }
        $0
" ("" . 1))) (nil ("/Users/greg/development/cam/core/forms.py" ("cam" . 1)) ("~/development/cam/apps/communicate/urls.py" ("cam" . 1)) ("/Users/greg/development/cam/manage.py" ("cam" . 6)) ("/Users/greg/development/cam/deploy/cam.wsgi" ("cam" . 2)) ("/Users/greg/development/cam/apps/newsletter/views.py" ("cam" . 1)) ("~/development/cam/manage.py" ("cam" . 2)) ("/development/python/scofield-project/scofield/product/urls.py" ("scofield" . 2)) ("~/Downloads/sequence_data.sql" ("cam" . 1))) ("Info Pages" ("ERC: (erc)" ("erc" . 1))) (command ("anything-c-yas-complete" ("yas-c" . 1)) ("anything-c-yas-create-snippet-on-regin" ("yas-c" . 6)) ("erc" ("erc" . 1)) ("anything-isearch" ("anythi" . 1))) ("/development/python/oebfare/apps/blog/" ("/development/python/oebfare/apps/blog/templatetags" ("" . 1))) ("Manual Pages" ("mdfind" ("mdfind" . 1)) ("dirname" ("dirname" . 1))) (file ("/Applications/Adobe Photoshop CS3/Presets/Web Photo Gallery/Horizontal Neutral/images/camicon02.gif" ("cam" . 1)) ("/Users/greg/Library/Caches/Metadata/Safari/History/http:%2F%2Flocalhost:8000%2Fcollections%2Fcategory%2Fproducts%2Fsoft-furnishings%2Fproduct%2Fbig-cushions.webhistory" ("cam" . 1)) ("~/development/cam/manage.py" ("cam" . 1)) ("/Users/greg/RubikitchAnythingConfiguration.txt" ("anything-occur" . 1)) ("/Library/Python/2.5/site-packages/scofield" ("scofield" . 1)) ("/Users/greg/development/camwebsite" ("/development/cam" . 1) ("camw" . 1) ("camwebsite" . 1)) ("/development/python/sequencemed/projects/sequence/apps/dtd/urls.py" ("dtd" . 1)) ("/development/python/sequencemed/projects/sequence/urls.py" ("dtd" . 1)) ("/development/python/sequencemed/projects/sequence/templates/dtd/members.html" ("dtd" . 1)) ("/development/python/sequencemed/projects/sequence/apps/dtd/views.py" ("dtd" . 1)) ("/Users/greg/development/cam/cam.db" ("cam" . 2)) ("/Users/greg/development/camwebsite/media/static/js/wymeditor/jquery.wymeditor.js" ("datetime" . 1)) ("/Users/greg/Library/Mail/IMAP-greg@20seven.org@mail.20seven.org/INBOX.imapmbox/Messages/18593.emlx" ("kevin" . 1)) ("/Users/greg/.emacs.d/anything-config.el" ("anything-config" . 1)) ("/development/python/scofield-project/scofield/cart/views.py" ("scofield-project" . 1)) ("/development/python/oebfare" ("oebfare" . 3)) ("/development/python/oebfare/apps/blog/feeds.py" ("oebfare" . 1)) ("/development/python/oebfare/apps/aggregator/models.py" ("oebfare" . 1)) ("/Users/greg/.emacs.d/configs/cfg_browse_kill_ring.el" ("cfg_" . 1)) ("/Users/greg/.emacs.d/dot-emacs" ("dot-emacs" . 1)) ("/Users/greg/.emacs.d/anything.el" ("anything.el" . 1)) ("/Users/greg/.emacs.d/configs/cfg_main.el" ("cfg_main" . 1)) ("/development/python/scofield-project/scofield/account" ("scofield-project" . 1)) ("/development/python/scofield-project/scofield/account/urls.py" ("scofield-project" . 1)) ("/development/python/scofield-project" ("scofield-project" . 2)) ("/development/python/scofield-norwall" ("scofield" . 1))) (buffer ("*Messages*" ("" . 1)) ("cfg_anything.el" ("" . 1)) ("18593.emlx" ("" . 1)) ("anything-c-source-mac-spotlight" ("" . 1) ("anything-c-source-mac-spotlight" . 1)) ("models.py" ("" . 1)) (" *function symbols*" ("" . 1)) ("*Completions*" ("" . 1)) ("anything.el" ("" . 1)) ("dot-emacs" ("" . 1)) ("cfg_main.el" ("" . 1)) ("settings.py" ("" . 1)) ("urls.py" ("" . 1)) ("pinax" ("pinax" . 1)) ("test" ("test" . 1)) ("python" ("python" . 1)) ("scofield-project" ("scofield-project" . 1))))))
